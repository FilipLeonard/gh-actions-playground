# This is a basic workflow to help you get started with Actions

name: Repository Dispatch 2

# Controls when the workflow will run
on:
  push:
    branches: [main]

  # Triggers the workflow on push or pull request events but only for the "main" branch
  repository_dispatch:
    types: [upx-frontend-trunk-build, upx-frontend-pr-build]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  trunkBuild:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Print build name
        run: echo ${{ github.event.client_payload.build_name }}

      - name: Generate a GH App installation token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.UPX_BOT_APP_ID }}
          private-key: ${{ secrets.UPX_BOT_PRIVATE_KEY }}

      - name: Print current GH user
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          gh auth status
          ls -la

      - name: Edit devenv and open PR
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          VERSION="${{ github.event.client_payload.build_name || github.event_name }}-${{github.run_number}}"
          BRANCH_NAME="automated-bump/upx-frontend-${VERSION}"

          sed -i -e "s/^export UPX_FRONTEND_VERSION=.*/export UPX_FRONTEND_VERSION=${VERSION}/" devenv
          printf "\nAFTER REPLACEMENT\n"
          cat devenv
          printf "\nLIST FILES\n"
          ls -l
          printf "\nLIST BRANCH\n"
          BRANCH=$(git branch --show-current)
          echo $BRANCH

          git config --global user.name 'Your Name'
          git config --global user.email 'your-username@users.noreply.github.com'

          gh auth setup-git

          make_body() {
              local message="This is an automated pull request created from a build pipeline owned by the upx team."
              printf "%s\n\n%s\n%s" "${message}" "$1" "$2"
          }
          case "${{ github.event.client_payload.original_event_name }}" in
              "pull_request")
                url_desc="Original PR"
                url="${{ github.event.client_payload.original_event.pull_request.html_url }}"
                ;;
                "push")
                url_desc="Original commit"
                url="${{ github.event.client_payload.original_event.head_commit.url }}"
                ;;
          esac  

          pr_body=$(make_body "${url_desc}" "${url}")

          git checkout -b ${BRANCH_NAME}

          git add devenv
          git commit -m "Bump upx-frontend to ${VERSION}"
          git push --set-upstream origin ${BRANCH_NAME}

          gh pr create \
          --title "Bump upx-frontend to ${VERSION}" \
          --body "${pr_body}" \
          --head "$(git branch --show-current)"
