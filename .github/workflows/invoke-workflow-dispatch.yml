# This is a basic workflow to help you get started with Actions

name: Trigger workflow dispatch

# Controls when the workflow will run
on:
  push:
    branches: [main]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  trigger-workflow-dispatch:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      # - name: Generate GitHub App Installation token
      #   id: app-token
      #   uses: actions/create-github-app-token@v1
      #   with:
      #     app-id: ${{ vars.UPX_BOT_APP_ID }}
      #     private-key: ${{ secrets.UPX_BOT_PRIVATE_KEY }}
      #     # owner: neo-technology
      #     # repositories: neo4j-cloud
      #     owner: FilipLeonard
      #     repositories: gh-actions-playground
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set build name and rename artifact
        id: build-name
        run: |
          SHORT_SHA=`echo ${{ github.sha }} | cut -c 1-10`
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_OUTPUT

      - name: Prepare commit details
        id: commit
        run: |
          pr=$(gh pr list --search "${{ github.sha }}" --state merged --json 'title,body,url' --jq '.[0]')
          pr_title=$(printf "%s" "${pr}" | jq -r .title )
          pr_body=$(printf "%s" "${pr}" | jq -r .body )
          pr_url=$(printf "%s" "${pr}" | jq -r .url )
          echo "PR_TITLE=$pr_title" >> $GITHUB_OUTPUT
          echo "PR_BODY=$pr_body" >> $GITHUB_OUTPUT
          echo "PR_URL=$pr_url" >> $GITHUB_OUTPUT
      - name: Invoke version bumping workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          # workflow: upx-frontend-version-bump.yaml
          # repo: neo-technology/neo4j-cloud
          # ref: master
          # ref: upx-frontend-version-bump-workflow
          # workflow: workflow-dispatch.yml
          workflow: 98912257
          # repo: FilipLeonard/gh-actions-playground
          # ref: main
          # token: ${{ github.token }}
          inputs: |-
            {
              "new_version": "${{ steps.build-name.outputs.SHORT_SHA }}",
              "source_event_url": "<source_event_url> manual dispatch",
              "source_pr_url": "${{ steps.commit.outputs.PR_URL }}",
              "source_pr_title": "${{ steps.commit.outputs.PR_TITLE }}",
              "source_pr_body": "${{ steps.commit.outputs.PR_BODY }}"
            }
