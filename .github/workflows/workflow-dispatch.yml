# This is a basic workflow to help you get started with Actions

name: Workflow Dispatch

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      new_version:
        type: string
        description: "New version of the UPX frontend artifacts"
        required: true
      commit_url:
        type: string
        description: "URL of commit"
        required: false
      commit_pr_url:
        type: string
        description: "URL of commit PR"
        required: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  print-inputs:
    runs-on: ubuntu-latest
    env:
      GITHUB_INPUTS: ${{ toJson(inputs) }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Validate new version
        run: |
          new_version="${{ inputs.new_version }}"
          if [[ ! $new_version =~ ^[0-9a-fA-F]{10}$ ]]; then
            echo "Invalid input new_version: must contain exactly 10 hexadecimal characters (0-9, a-f, A-F)."
            exit 1
          fi

      - run: |
          echo "Inputs: ${GITHUB_INPUTS}"

      - name: Generate a GH App installation token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.UPX_BOT_APP_ID }}
          private-key: ${{ secrets.UPX_BOT_PRIVATE_KEY }}
          owner: FilipLeonard
          repositories: gh-actions-playground

      - name: Edit devenv and open PR
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          make_body() {
            local main_desc="This is an automated pull request created from a build pipeline owned by the UPX team."
            printf "%s\n\nOriginal UPX pull request %s\nOriginal UPX commit to trunk %s" "${main_desc}" ${{ inputs.commit_pr_url }} ${{ inputs.commit_url }}
          } 
          PR_BODY="$(make_body)"

          NEW_VERSION="${{ inputs.new_version }}"
          BRANCH_NAME="automated-bump/upx-frontend-${NEW_VERSION}"
          COMMIT_MESSAGE="Bump upx-frontend to ${NEW_VERSION}"

          sed -i -e "s/^export UPX_FRONTEND_VERSION=.*/export UPX_FRONTEND_VERSION=${NEW_VERSION}/" devenv

          git config --global user.name 'Your Name'
          git config --global user.email 'your-username@users.noreply.github.com'
          gh auth setup-git

          git checkout -b ${BRANCH_NAME}
          git add devenv
          git commit -m "${COMMIT_MESSAGE}"
          git push --set-upstream origin ${BRANCH_NAME}

          gh pr create \
          --title "${COMMIT_MESSAGE}" \
          --body "${PR_BODY}" \
          --head "$(git branch --show-current)"

          gh pr merge --auto --squash --delete-branch "${BRANCH_NAME}"

          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_OUTPUT
      - uses: hmarr/auto-approve-action@v4
        with:
          review-message: "Auto approved automated PR"
