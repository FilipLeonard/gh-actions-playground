# This is a basic workflow to help you get started with Actions

name: Workflow Dispatch

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      new_version:
        type: string
        description: "New version of the UPX frontend artifacts"
        required: true
      source_event:
        type: string
        description: "Original event that triggered this workflow, used in PR body"
        required: false
      source_event_url:
        type: string
        description: "URL of original event, used in PR body"
        required: false
      source_pr:
        type: string
        required: false
      source_pr_url:
        type: string
        required: false
        default: '""'
      source_pr_title:
        type: string
        required: false
        default: '""'
      source_pr_body:
        type: string
        required: false
        default: '""'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  print-inputs:
    runs-on: ubuntu-latest
    env:
      GITHUB_INPUTS: ${{ toJson(inputs) }}
      SOURCE_PR: ${{ inputs.source_pr }}
      # SOURCE_PR_RAW: ${{ fromJson(inputs.source_pr) }}
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Validate new version
        run: |
          new_version="${{ inputs.new_version }}"
          if [[ ! $new_version =~ ^[0-9a-fA-F]{10}$ ]]; then
            echo "Invalid input new_version: must contain exactly 10 hexadecimal characters (0-9, a-f, A-F)."
            exit 1
          fi

      - run: |
          echo "Inputs: ${GITHUB_INPUTS}"
          echo "Source PR: ${SOURCE_PR}"
          echo "Source PR Raw: ${SOURCE_PR_RAW}"

      - name: Edit devenv and open PR
        if: ${{ inputs.source_pr_title }}
        run: |
          make_body() {
            local main_desc="This is an automated pull request created from a build pipeline owned by the UPX team."
            printf "%s\n\nOriginal PR\n%s\n%s\n%s\n" "${main_desc}" ${{ inputs.source_pr_url }} ${{ inputs.source_pr_title }} ${{inputs.source_pr_body}}
          } 
          PR_BODY="$(make_body)"

          echo "✅"
          echo $PR_BODY
          echo "✅"
          printf "%s" $PR_BODY
          echo "✅"

          NEW_VERSION="${{ inputs.new_version }}"
          BRANCH_NAME="automated-bump/upx-frontend-${NEW_VERSION}"
          COMMIT_MESSAGE="Bump upx-frontend to ${NEW_VERSION}"

          sed -i -e "s/^export UPX_FRONTEND_VERSION=.*/export UPX_FRONTEND_VERSION=${NEW_VERSION}/" devenv

          git config --global user.name 'Your Name'
          git config --global user.email 'your-username@users.noreply.github.com'
          gh auth setup-git

          git checkout -b ${BRANCH_NAME}
          git add devenv
          git commit -m "${COMMIT_MESSAGE}"
          git push --set-upstream origin ${BRANCH_NAME}

          gh pr create \
          --title "${COMMIT_MESSAGE}" \
          --body "${PR_BODY}" \
          --head "$(git branch --show-current)"
